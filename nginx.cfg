GeekStuff.sh {echo {01..5}: echo {01..5..2}} Git.ini DBaaS --> Linode
export HISTTIMEFORMAT='%F %T '

Current default time zone: 'Africa/Kampala'
Local time is now:      Mon Apr 17 07:44:26 EAT 2023.
Universal Time is now:  Mon Apr 17 04:44:26 UTC 2023.

location /fruits {
	root /Users/laithhard/Desktop/mysite;
}

location /carbs {
	alias /Users/laithhard/Desktop/mysite/fruits;
}

location /vegetables {
	alias /Users/laithhard/Desktop/mysite;
	try_files /vegetables/veggies.html /index.html =404;
}

rewrite ^/number/(\w+) /count/$1;

location ~* /count/[0-9] {
	root /Users/laithhard/Desktop/mysite;
	try_files /index.html =404;
}

location /crops {
	return 307 /fruits;
}

; Load Balancer 
; Build a docker container 
mkdir server 
index.js 
npm init -y 
npm install express 
const express = require("express")
const app = express()
app.get("/", (req, res)) => {
	res.send("I am a endpoint")
}

app.listen(7777, () => {
	console.log("listening on port 7777")
})
"scripts": {
	"start": "node index.js"
} 
npm run start 
google -> docker file for express app 

docker build . -t myserver
Docker Desktop 
docker run -p 1111:7777 -d myserver
docker run -p 2222:7777 -d myserver
docker run -p 3333:7777 -d myserver
docker run -p 4444:7777 -d myserver

server {
	listen 8080;

	upstream backend {
		server127.0.0.1:1111
		server127.0.0.1:2222
		server127.0.0.1:3333
		server127.0.0.1:4444
	}

	location / {
		proxy_pass http://backend/;
	}
}

Your Dockerfile should now look like this:
FROM node:16

# Create app directory
WORKDIR /usr/src/app

# Install app dependencies
# A wildcard is used to ensure both package.json AND package-lock.json are copied
# where available (npm@5+)
COPY package*.json ./

RUN npm install
# If you are building your code for production
# RUN npm ci --omit=dev

# Bundle app source
COPY . .

EXPOSE 8080
CMD [ "node", "server.js" ]

.dockerignore
node_modules
npm-debug.log
docker build . -t <your username>/node-web-app
docker images
docker run -p 49160:8080 -d <your username>/node-web-app
docker ps
docker logs <container id>
docker exec -it <container id> /bin/bash
docker ps 
curl -i localhost:49160
docker kill <container id>
; ------------------------------------------------------------
'use strict';

const express = require('express');

// Constants
const PORT = 8080;
const HOST = '0.0.0.0';

// App
const app = express();
app.get('/', (req, res) => {
  res.send('Hello World');
});

app.listen(PORT, HOST, () => {
  console.log(`Running on http://${HOST}:${PORT}`);
});

; -------------------------- How to install NGINX on Debian 11 ------------------------
; https://itslinuxfoss.com/install-nginx-debian-eleven/ { Worked: ***** }
sudo apt remove nginx
sudo apt remove ––purge [package-name] 
sudo apt install telegram-desktop
dpkg -L telegram-desktop
sudo apt remove --purge --autoremove nginx

sudo apt update
sudo apt install nginx
sudo nginx -v
curl -I 127.0.0.1

sudo wget https://nginx.org/keys/nginx_signing.key 
sudo apt-key add nginx_signing.key
sudo nano /etc/apt/sources.list
deb https://nginx.org/packages/mainline/debian/ bullseye nginx
deb-src https://nginx.org/packages/mainline/debian bullseye nginx

sudo apt update && sudo apt upgrade 
sudo apt install nginx

sudo nginx -v
sudo rm -rf /var/www/html
sudo apt purge nginx nginx-common

; ------------------------------------ NGINX Cookbook : {*****} ------------------------------------------------
; NGINX Cookbook, 2nd Edition for 2022 Advanced Recipes for High-Performance Load Balancing (Derek DeJonghe) (Z-Library)
sudo apt remove --purge --autoremove nginx
sudo apt update && sudo apt upgrade
sudo apt install -y curl gnupg2 ca-certificates lsb-release debian-archive-keyring
sudo curl https://nginx.org/keys/nginx_signing.key | gpg --dearmor | tee /usr/share/keyrings/nginx-archive-keyring.gpg >/dev/null
OS=$(lsb_release -is | tr '[:upper:]' '[:lower:]')
RELEASE=$(lsb_release -cs)
sudo echo "deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] \
http://nginx.org/packages/${OS} ${RELEASE} nginx" \
| sudo tee /etc/apt/sources.list.d/nginx.list
sudo apt update
sudo apt install -y nginx
sudo nginx -v 
ps -ef | grep nginx 
curl localhost

/etc/nginx/conf.d/
/var/log/nginx

sudo nginx -h 
sudo nginx -v 
sudo nginx -V
sudo nginx -t
sudo nginx -T 
sudo nginx -s signal { stop|quit|reload|reopen }
sudo nginx -s reload 
sudo nano /etc/nginx/conf.d/default.conf
server {
        listen 80 default_server;
        server_name localhost;

        location / {
                root /var/www/walusih.co.ug/html;
                # alias /usr/share/nginx/html;
                index index.html index.htm;
        }
}
; ----------------------- How to Set Up an NGINX Reverse Proxy {*****:linode YTCnn} --------------------------
Node:3000
cd /etc/nginx/conf.d && nano nodeapp.conf && mv default.conf default.conf.disabled 

server {
	listen 80;
	listen [::]:80;

	server_name 192.168.64.129;

	location / {
		proxy_pass http://localhost:3000/;
	}
}

; MongoDB
mongodb cheatsheet --> Google { codewithharry }
https://www.codewithharry.com/blogpost/mongodb-cheatsheet/


; -----------------------------------------------------------------------------------------------------
; HTTP Load Balancing
upstream backend {
	server 10.10.12.45:80 weight=1;
	server app.example.com:80 weight=2;
	server spare.example.com:80 backup;
}
server {
	location / {
		proxy_pass http://backend;
	}
}
; TCP Load Balancing {  stream.conf.d }
stream {
	upstream mysql_read {
		server read1.example.com:3306 weight=5;
		server read2.example.com:3306;
		server 10.10.12.34:3306 backup;
}
	server {
		listen 3306;
		proxy_pass mysql_read;
	}
}
In the /etc/nginx/nginx.conf configuration file:
user nginx;
worker_processes auto;
pid /run/nginx.pid;

stream {
	include /etc/nginx/stream.conf.d/*.conf;
}
A file named /etc/nginx/stream.conf.d/mysql_reads.conf may include the following configuration:
upstream mysql_read {
	server read1.example.com:3306 weight=5;
	server read2.example.com:3306;
	server 10.10.12.34:3306 backup;
}
server {
	listen 3306;
	proxy_pass mysql_read;
}

upstream backend {
	server backend1.example.com:1234 max_fails=3 fail_timeout=3s;
	server backend2.example.com:1234 max_fails=3 fail_timeout=3s;
}
; --------------------------------------------------------------------------------------------------------------

; ---------------------- How To Deploy A react App - Using NGINX & Linux { Tech With Tim } --------------------
GitLab | Linode 
Create -> Linode -> Debian 11 ->  Region -> Dedicated 8GB -> react app -> pwd
sudo apt update && apt upgrade 
sudo dpkg-reconfigure tzdata - set timezone
sudo adduser tim 
sudo adduser tim sudo 
sudo passwd -d root 
sudo passwd -l root 
sudo apt install nginx 
sudo mkdir /var/www/192.168.64.129
sudo chmod 755 -R /var/www/192.168.64.129/
sudo chown -R tim:www-data /var/www/192.168.64.129/
sudo nano /etc/nginx/sites-available/192.168.64.129 
server {
	listen 80;
	listen [::]:80;

	root /var/www/192.168.64.129;
	index index.html;
}
sudo nginx -t 
sudo unlink /etc/nginx/sites-enabled/default
sudo ln -s /etc/nginx/sites-available/192.168.64.129 /etc/nginx/sites-enabled/
sudo systemctl restart nginx 

deploy.sh { :Script for Deploying the App to Nginx in react-app root dir }
echo "Switching to brahnch master"
git checkout master 

echo "Building app..."
npm run build 

echo "Deploying files to server..."
scp -r build/* tim@192.168.64.129:/var/www/192.168.64.129/

echo "Done!"

; Git-Bash 
chmod u+x deploy.sh 
./deploy.sh 

_blank : norefferer


; -----------------------------------------------------------------------------------------------------------
ssh-keygen -t rsa -b 4096 -C "rwaMa4il@gmail.com" -f firstserverkey_rsa

; ------ Configure NGINX as a Reverse Proxy --------------
server {
	listen 80;
	proxy_set_header Host $host;
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	add_header Test_header jay;

	location / {
		proxy_pass http://10.1.1.4:9000/appl;
	}
}
log_format custon_log 

; 18 Commands That Will Change The Way You Use Linux Forever ( YouTube Video)
reset   --> clear screen 
Ctrl+R  --> history search
!45
ps -auxf | sort -nr -k 4 | head -10
HISTTIMEFORMAT="%Y-%m-%d %T "
history
nano ~/.bashrc 
sudo apt install cmatrix 
cmatrix F11
atop || htop 
Ctrl+Shift++	--> {:Not Working}
Ctrl+- 	--> Zoom In
Ctrl+U	--> Delete or Clear Line on Terminal
Ctrl+A  --> Beginning Of Line
Ctrl+E	--> End Of Line
sudo apt install dist-upgrade 
truncate -s 0 hello.txt | > hello.txt 
mount | column -t 

; 12 MORE Commands That Will Change The Way You Use Linux Forever
head /var/log/syslog 
head /var/log/syslog | wc -l 
tail -n 3 /var/log/syslog 
tail -f /var/log/syslog  -> Ctrl+C
sudo apt update && sudo apt dist-upgrade 
sudo apt update || sudo apt dist-upgrade 
htop || sudo apt install htop 
htop || sudo apt install htop && htop 
ps -eo comm,pcpu --sort -pcpu | head -5; ps -eo comm,pmem --sort -pmem | head -5
alias p5="ps -eo comm,pcpu --sort -pcpu | head -5; ps -eo comm,pmem --sort -pmem | head -5"
curl wttr.in
tac /var/log/syslog
cat /var/log/syslog --> Shift+Page Up/Down { Scroll }
--> https://bashrcgenerator.com { .bashrc PS1 Generator }

sudo -s 
su - 
hostnamectl set-hostname Herbert-Laptop
vi /etc/hosts

; Set a particular pretty host name
hostnamectl set-hostname "Vivek's Thinkpad" --pretty

; Changing Debian host names remotely using ssh
hostnamectl set-hostname -H [username]@hostname
hostnamectl set-hostname {new_name_here} -H root@192.168.2.10
hostnamectl set-hostname www42.nixcraft.com -H root@192.168.2.10

alias ..='cd ..'
alias apt-get='sudo apt-get'
alias c='clear'
unalias c 

# if user is not root, pass all commands via sudo #
if [ $UID -ne 0 ]; then
    alias reboot='sudo reboot'
    alias update='sudo apt-get upgrade'
fi

### Get os name via uname ###
_myos="$(uname)"
 
### add alias as per os using $_myos ###
case $_myos in
   Linux) alias foo='/path/to/linux/bin/foo';;
   FreeBSD|OpenBSD) alias foo='/path/to/bsd/bin/foo' ;;
   SunOS) alias foo='/path/to/sunos/bin/foo' ;;
   *) ;;
esac
; --------------------------------------------------------------------
vmstat 3
vmstat -m 
vmstat -a 
smem

pgrep memcached
grep --color VmSwap /proc/48440/status

w username
w vivek

ps ax
ps axu
ps -ejH
ps axjf
pstree

ps -eo euser,ruser,suser,fuser,f,comm,label
ps axZ
ps -eM

ps -U vivek -u vivek u

ps -eo pid,tid,class,rtprio,ni,pri,psr,pcpu,stat,wchan:14,comm
ps axo stat,euid,ruid,tty,tpgid,sess,pgrp,ppid,pid,pcpu,comm
ps -eopid,tt,user,fname,tmout,f,wchan

ps -C lighttpd -o pid=
pgrep lighttpd
pgrep -u vivek php-cgi

ps -p 55977 -o comm=

ps -auxf | sort -nr -k 4 | head -10
ps -auxf | sort -nr -k 3 | head -10

iostat 

sar -n DEV | more
sar -n DEV -f /var/log/sa/sa24 | more 
sar 4 5 

mpstat -P ALL

pmap -d PID 

netstat -tulpn
netstat -nat

ss -t -a
ss -u -a
ss -t -a -Z

iptraf – Get real-time network statistics on Linux

tcpdump -i eth1 'udp port 53'
tcpdump 'tcp port 80 and (((ip[2:2] - ((ip[0]&0xf)<<2)) - ((tcp[12]&0xf0)>>2)) != 0)'
tcpdump -i eth1 'dst 202.54.1.5 and (port 21 or 20'
tcpdump -ni eth0 'dst 192.168.1.5 and tcp and port http'
tcpdump -n -i eth1 -s 0 -w output.txt src or dst port 80
; Wireshark
atop 
sudo iotop
sudo nethogs
sudo iftop
vnstat
nmon
glances

cat /proc/cpuinfo
cat /proc/meminfo
cat /proc/zoneinfo
cat /proc/mounts

Nagios – Linux server/network monitoring
Cacti – Web-based Linux monitoring tool

; https://www.cyberciti.biz/tips/linux-unix-bsd-nginx-webserver-security.html
getsebool -a | less
getsebool -a | grep off
getsebool -a | grep on

LABEL=/nginx     /nginx          ext3   defaults,nosuid,noexec,nodev 1 2

; Password Protect The Directory
mkdir /usr/local/nginx/conf/.htpasswd/
htpasswd -c /usr/local/nginx/conf/.htpasswd/passwd vivek

Edit nginx.conf and protect the required directories as follows:
### Password Protect /personal-images/ and /delta/ directories ###
location ~ /(personal-images/.*|delta/.*) {
  auth_basic  "Restricted";
  auth_basic_user_file   /usr/local/nginx/conf/.htpasswd/passwd;
}
Once a password file has been generated, subsequent users can be added with the following command:
htpasswd -s /usr/local/nginx/conf/.htpasswd/passwd userName

Configure Operating System to Protect Web { Files should not be owned by nginx user}
find /usr/local/nginx/html -user nginx

Avoid clickjacking
Add the following in your nginx.conf or virtual domain to avoid clickjacking:
add_header X-Frame-Options SAMEORIGIN;

; 30 bash shell aliases examples
; https://www.cyberciti.biz/tips/bash-aliases-mac-centos-linux-unix.html
## Colorize the ls output ##
alias ls='ls --color=auto'
 
## Use a long listing format ##
alias ll='ls -la'
 
## Show hidden files ##
alias l.='ls -d .* --color=auto'

## get rid of command not found ##
alias cd..='cd ..'
 
## a quick way to get out of current directory ##
alias ..='cd ..'
alias ...='cd ../../../'
alias ....='cd ../../../../'
alias .....='cd ../../../../'
alias .4='cd ../../../../'
alias .5='cd ../../../../..'

## Colorize the grep command output for ease of use (good for log files)##
alias grep='grep --color=auto'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'

alias bc='bc -l'

alias sha1='openssl sha1'

alias mkdir='mkdir -pv'

# install  colordiff package :)
alias diff='colordiff'

alias mount='mount |column -t'

# handy short cuts #
alias h='history'
alias j='jobs -l'

alias path='echo -e ${PATH//:/\\n}'
alias now='date +"%T"'
alias nowtime=now
alias nowdate='date +"%d-%m-%Y"'

alias vi=vim
alias svi='sudo vi'
alias vis='vim "+set si"'
alias edit='vim'

# Stop after sending count ECHO_REQUEST packets #
alias ping='ping -c 5'
# Do not wait interval 1 second, go fast #
alias fastping='ping -c 100 -s.2'

alias ports='netstat -tulanp'

## replace mac with your actual server mac address #
alias wakeupnas01='/usr/bin/wakeonlan 00:11:32:11:15:FC'
alias wakeupnas02='/usr/bin/wakeonlan 00:11:32:11:15:FD'
alias wakeupnas03='/usr/bin/wakeonlan 00:11:32:11:15:FE'

## shortcut  for iptables and pass it via sudo#
alias ipt='sudo /sbin/iptables'
 
# display all rules #
alias iptlist='sudo /sbin/iptables -L -n -v --line-numbers'
alias iptlistin='sudo /sbin/iptables -L INPUT -n -v --line-numbers'
alias iptlistout='sudo /sbin/iptables -L OUTPUT -n -v --line-numbers'
alias iptlistfw='sudo /sbin/iptables -L FORWARD -n -v --line-numbers'
alias firewall=iptlist

# get web server headers #
alias header='curl -I'
 
# find out if remote server supports gzip / mod_deflate or not #
alias headerc='curl -I --compress'

# do not delete / or prompt if deleting more than 3 files at a time #
alias rm='rm -I --preserve-root'
 
# confirmation #
alias mv='mv -i'
alias cp='cp -i'
alias ln='ln -i'
 
# Parenting changing perms on / #
alias chown='chown --preserve-root'
alias chmod='chmod --preserve-root'
alias chgrp='chgrp --preserve-root'

# distro specific  - Debian / Ubuntu and friends #
# install with apt-get
alias apt-get="sudo apt-get"
alias updatey="sudo apt-get --yes"
 
# update on one command
alias update='sudo apt-get update && sudo apt-get upgrade'

## distrp specifc RHEL/CentOS ##
alias update='yum update'
alias updatey='yum -y update'

# become root #
alias root='sudo -i'
alias su='sudo -i'

# reboot / halt / poweroff
alias reboot='sudo /sbin/reboot'
alias poweroff='sudo /sbin/poweroff'
alias halt='sudo /sbin/halt'
alias shutdown='sudo /sbin/shutdown'

# also pass it via sudo so whoever is admin can reload it without calling you #
alias nginxreload='sudo /usr/local/nginx/sbin/nginx -s reload'
alias nginxtest='sudo /usr/local/nginx/sbin/nginx -t'
alias lightyload='sudo /etc/init.d/lighttpd reload'
alias lightytest='sudo /usr/sbin/lighttpd -f /etc/lighttpd/lighttpd.conf -t'
alias httpdreload='sudo /usr/sbin/apachectl -k graceful'
alias httpdtest='sudo /usr/sbin/apachectl -t && /usr/sbin/apachectl -t -D DUMP_VHOSTS'

# if cron fails or if you want backup on demand just run these commands #
# again pass it via sudo so whoever is in admin group can start the job #
# Backup scripts #
alias backup='sudo /home/scripts/admin/scripts/backup/wrapper.backup.sh --type local --taget /raid1/backups'
alias nasbackup='sudo /home/scripts/admin/scripts/backup/wrapper.backup.sh --type nas --target nas01'
alias s3backup='sudo /home/scripts/admin/scripts/backup/wrapper.backup.sh --type nas --target nas01 --auth /home/scripts/admin/.authdata/amazon.keys'
alias rsnapshothourly='sudo /home/scripts/admin/scripts/backup/wrapper.rsnapshot.sh --type remote --target nas03 --auth /home/scripts/admin/.authdata/ssh.keys --config /home/scripts/admin/scripts/backup/config/adsl.conf'
alias rsnapshotdaily='sudo  /home/scripts/admin/scripts/backup/wrapper.rsnapshot.sh --type remote --target nas03 --auth /home/scripts/admin/.authdata/ssh.keys  --config /home/scripts/admin/scripts/backup/config/adsl.conf'
alias rsnapshotweekly='sudo /home/scripts/admin/scripts/backup/wrapper.rsnapshot.sh --type remote --target nas03 --auth /home/scripts/admin/.authdata/ssh.keys  --config /home/scripts/admin/scripts/backup/config/adsl.conf'
alias rsnapshotmonthly='sudo /home/scripts/admin/scripts/backup/wrapper.rsnapshot.sh --type remote --target nas03 --auth /home/scripts/admin/.authdata/ssh.keys  --config /home/scripts/admin/scripts/backup/config/adsl.conf'
alias amazonbackup=s3backup

## play video files in a current directory ##
# cd ~/Download/movie-name
# playavi or vlc
alias playavi='mplayer *.avi'
alias vlc='vlc *.avi'
 
# play all music files from the current directory #
alias playwave='for i in *.wav; do mplayer "$i"; done'
alias playogg='for i in *.ogg; do mplayer "$i"; done'
alias playmp3='for i in *.mp3; do mplayer "$i"; done'
 
# play files from nas devices #
alias nplaywave='for i in /nas/multimedia/wave/*.wav; do mplayer "$i"; done'
alias nplayogg='for i in /nas/multimedia/ogg/*.ogg; do mplayer "$i"; done'
alias nplaymp3='for i in /nas/multimedia/mp3/*.mp3; do mplayer "$i"; done'
 
# shuffle mp3/ogg etc by default #
alias music='mplayer --shuffle *'

## All of our servers eth1 is connected to the Internets via vlan / router etc  ##
alias dnstop='dnstop -l 5  eth1'
alias vnstat='vnstat -i eth1'
alias iftop='iftop -i eth1'
alias tcpdump='tcpdump -i eth1'
alias ethtool='ethtool eth1'
 
# work on wlan0 by default #
# Only useful for laptop as all servers are without wireless interface
alias iwconfig='iwconfig wlan0'

## pass options to free ##
alias meminfo='free -m -l -t'
 
## get top process eating memory
alias psmem='ps auxf | sort -nr -k 4'
alias psmem10='ps auxf | sort -nr -k 4 | head -10'
 
## get top process eating cpu ##
alias pscpu='ps auxf | sort -nr -k 3'
alias pscpu10='ps auxf | sort -nr -k 3 | head -10'
 
## Get server cpu info ##
alias cpuinfo='lscpu'
 
## older system use /proc/cpuinfo ##
##alias cpuinfo='less /proc/cpuinfo' ##
 
## get GPU ram on desktop / laptop##
alias gpumeminfo='grep -i --color memory /var/log/Xorg.0.log'

# Reboot my home Linksys WAG160N / WAG54 / WAG320 / WAG120N Router / Gateway from *nix.
alias rebootlinksys="curl -u 'admin:my-super-password' 'http://192.168.1.2/setup.cgi?todo=reboot'"
 
# Reboot tomato based Asus NT16 wireless bridge
alias reboottomato="ssh admin@192.168.1.1 /sbin/reboot"

## this one saved by butt so many times ##
alias wget='wget -c

## this one saved by butt so many times ##
alias ff4='/opt/firefox4/firefox'
alias ff13='/opt/firefox13/firefox'
alias chrome='/opt/google/chrome/chrome'
alias opera='/opt/opera/opera''
 
#default ff
alias ff=ff13
 
#my default browser
alias browser=chrome

## set some other defaults ##
alias df='df -H'
alias du='du -ch'
 
# top is atop, just like vi is vim
alias top='atop'
 
## nfsrestart  - must be root  ##
## refresh nfs mount / cache etc for Apache ##
alias nfsrestart='sync && sleep 2 && /etc/init.d/httpd stop && umount netapp2:/exports/http && sleep 2 && mount -o rw,sync,rsize=32768,wsize=32768,intr,hard,proto=tcp,fsc natapp2:/exports /http/var/www/html &&  /etc/init.d/httpd start'
 
## Memcached server status  ##
alias mcdstats='/usr/bin/memcached-tool 10.10.27.11:11211 stats'
alias mcdshow='/usr/bin/memcached-tool 10.10.27.11:11211 display'
 
## quickly flush out memcached server ##
alias flushmcd='echo "flush_all" | nc 10.10.27.11 11211'
 
## Remove assets quickly from Akamai / Amazon cdn ##
alias cdndel='/home/scripts/admin/cdn/purge_cdn_cache --profile akamai'
alias amzcdndel='/home/scripts/admin/cdn/purge_cdn_cache --profile amazon'
 
## supply list of urls via file or stdin
alias cdnmdel='/home/scripts/admin/cdn/purge_cdn_cache --profile akamai --stdin'
alias amzcdnmdel='/home/scripts/admin/cdn/purge_cdn_cache --profile amazon --stdin'''



; Video : { NGINX Linux Server - Common Configurations } --------------------------
ps aux | grep nginx 
worker_processes no-cores;
cat /proc/cpuinfo { siblings } | nproc
error_log	/var/log/nginx/error.log warn;
error_page	500 502 503 504	/50x.html;
location = /50x.html {
	root /usr/share/nginx/html;
}
server_name	example.com www.example.com
; u can add another location 
location /blog/ {
	root /usr/share/nginx/blog;
	index index.html index.htm 
}
sudo systemctl restart nginx 
sudo systemctl status nginx 

sudo systemctl reload nginx 
sudo systemctl stop nginx 

; ---------------------------------------------------------------------------------
; https://www.linode.com/docs/guides/how-to-configure-nginx/
 /etc/nginx/conf.d/example.com.conf
server {
    listen         80 default_server;
    listen         [::]:80 default_server;
    server_name    example.com www.example.com;
    root           /var/www/example.com;
    index          index.html;
    try_files $uri /index.html;
}

; -------------------------- Installing NGINX on Debian 10 -----------------------
; https://www.linode.com/docs/guides/how-to-install-nginx-debian-10/ (*****)
sudo unlink /etc/nginx/sites-enabled/default
sudo ln -s /etc/nginx/sites-available/walusih.co.ug /etc/nginx/sites-enabled/
sudo nginx -t 
sudo nginx -s reload

; Recover lost window on 2nd monitor 
Alt + Tab 
Alt + Space + M 

server_names_hash_bucket_size 64;

; https://www.digitalocean.com/community/tutorials/nginx-essentials-installation-and-configuration-troubleshooting
; Creating a Document Root for a Static Site
sudo mkdir -p /var/www/walusih.co.ug/html 
sudo chown -R $USER:$USER /var/www/walusih.co.ug/html 
sudo chown -R $USER:nginx /var/www/walusih.co.ug/html 
sudo find /var/www -type d -exec chmod 775 {} \;
sudo find /var/www -type d -exec chmod 755 {} \;

; Creating a Document Root for a Dynamically Processed Site
sudo mkdir -p /var/www/walusih.co.ug/html
sudo chown -R www-data:www-data /var/www/walusih.co.ug
sudo find /var/www -type d -exec chmod 775 {} \;
sudo ln -s /etc/nginx/sites-available/walusih.co.ug /etc/nginx/sites-enabled/
; sudo chmod -R 755 /var/www/ (digitalocean)

server {
	listen 80;
	listen [::]:80;

	server_name walsuih.co.ug www.walusih.co.ug;

	root /var/www/walusih.co.ug/html;
	index index.html;

	location / {
		try_files $uri $uri/ =404
	}
}

sudo nano /etc/nginx/sites-available/walusih.co.ug
sudo ln -s /etc/nginx/sites-available/walusih.co.ug /etc/nginx/sites-enabled/
sudo ln -s /etc/nginx/sites-available/default /etc/nginx/sites-enabled/
sudo cp /etc/nginx/sites-available/default
server {
        listen 80 default_server;
        listen [::]:80 default_server;

        root /var/www/html;
        index index.html index.htm index.nginx-debian.html;

        server_name _;

        location / {
                try_files $uri $uri/ =404;
        }
}
grep -R default_server /etc/nginx/sites-enabled/
server {
        listen 80;
        listen [::]:80;

        root /var/www/example.com/html;
        index index.html index.htm index.nginx-debian.html;

        server_name example.com www.example.com;

        location / {
                try_files $uri $uri/ =404;
        }
}
sudo nano /etc/hosts


; Videos 
;@ Nginx Tutorial - Learn Nginx Fundamentals - Deploy a Web Application Using Nginx - Edureka
sudo apt update && sudo apt install nginx
sudo ufw enable
sudo ufw app list 
sudo ufw allow 'Nginx Full'
sudo ufw status 
sudo systemctl status nginx 

sudo cp -r ~/Dowloads/demo /var/www
sudo vi /etc/hosts
0.0.0.0		sample.com 
scp -r * 0.0.0.0:/var/www/demo .
sudo chmod -R 777 *
cd /etc/nginx 


;@ NGINX Linux Server - Common Configurations

; ----------------------------------------------------------------------------
; https://www.cyberciti.biz/faq/howto-install-setup-nginx-on-debian-linux-9/
sudo nano /etc/nginx/sites-enabled/default
sudo useradd -c "cyberciti.biz user" -d /home/nginx-www.cyberciti.biz -s /usr/sbin/nologin -m cbzwww
sudo passwd -l cbzwww
sudo nano /etc/nginx/sites-available/www.cyberciti.biz.conf
server {
	listen 80;
	listen [::]:80;
 
	server_name www.cyberciti.biz;
 
	root /home/nginx-www.cyberciti.biz;
	index index.html;
 
	location / {
		try_files $uri $uri/ =404;
	}
}
sudo ln -s /etc/nginx/sites-available/www.cyberciti.biz.conf /etc/nginx/sites-enabled/www.cyberciti.biz.conf
sudo nginx -t
sudo systemctl reload nginx
sudo nano /home/nginx-www.cyberciti.biz/index.html
<!DOCTYPE html>
<html>
<head>
<title>Welcome to nixCraft!</title>
<style>
    body {
        width: 35em;
        margin: 0 auto;
        font-family: Tahoma, Verdana, Arial, sans-serif;
    }
</style>
</head>
<body>
<h1>Welcome to www.cyberciti.biz!</h1>
<p>This is a test for Nginx virtual host.</p>
 
<p><em>Thank you for using nixCraft tutorials.</em></p>
</body>
</html>
sudo chown cbzwww:cbzwww /home/nginx-www.cyberciti.biz/index.html
sudo chmod 0444 /home/nginx-www.cyberciti.biz/index.html
ls -l /home/nginx-www.cyberciti.biz/index.html

; --------------- Learning NGINX -----------------------------
mount 
/dev/cdrom on /mnt/cdrom type iso9660 (ro,nosuid,nodev)
mkdir /mnt/cdrom
mount /dev/cdrom /mnt/cdrom
cd /tmp 
ls mount-point 
tar zxpf /mnt/cdrom/VMwareTools-x.x.x-yyyy.tar,gz
umount /dev/cdrom
cd vmware-tools-distrib
sudo ./vmware-install.pl

; @-----------------------------------------------------------
; https://www.digitalocean.com/community/tutorials/how-to-install-nginx-on-debian-11
sudo ufw app list
sudo ufw allow 'Nginx HTTP'
sudo ufw status
systemctl status nginx
ip addr show eth0 | grep inet | awk '{ print $2; }' | sed 's/\/.*$//'
sudo systemctl stop nginx
sudo systemctl start nginx
sudo systemctl restart nginx
sudo systemctl reload nginx
sudo systemctl disable nginx
sudo systemctl enable nginx
/var/www/html --> Server Block (Default)
sudo mkdir -p /var/www/walusih/html
sudo chown -R walusih:walusih /var/www/walusih/html
sudo chmod -R 755 /var/www/walusih

vi /var/www/walusih/html/index.html
vi /etc/nginx/sites-available/walusih

sudo ln -s /etc/nginx/sites-available/walusih /etc/nginx/sites-enabled/
sudo nano /etc/nginx/nginx.conf
Find the server_names_hash_bucket_size directive and remove the # symbol to uncomment the line:

sudo nginx -t
sudo systemctl restart nginx

; https://www.howtoforge.com/how-to-install-nginx-on-debian-11/
sudo apt install curl gnupg2 ca-certificates lsb-release
sudo apt install nginx -y
sudo systemctl status nginx
sudo systemctl start nginx
sudo systemctl stop nginx
sudo systemctl restart nginx
sudo nginx -v
sudo nginx -t
sudo systemctl enable nginx

sudo ufw app list
Nginx Full: This profile opens both port 80 and 443 for Nginx
Nginx HTTP: This profile opens only port 80 for Nginx
Nginx HTTPS: This profile opens only port 443 for Nginx
sudo ufw allow 'Nginx HTTP'
sudo ufw status

hostname -I

; https://techlabs.blog/categories/azure/install-nginx-web-server-on-debian-11
ufw allow 80
ufw allow 443

sudo ln -s /etc/nginx/sites-available/yourdomain.com.conf /etc/nginx/sites-enabled/

sudo mkdir /var/www/walusih.co.ug/html -p
sudo chown -Rf www-data:www-data /var/www/walusih.co.ug
sudo chmod -Rf 750 /var/www/walusih.co.ug
sudo nano /var/www/walusih/html/index.html
sudo nano /etc/nginx/sites-available/walusih.co.ug.conf
sudo ln -s /etc/nginx/sites-available/walusih.co.ug.conf /etc/nginx/sites-enabled
nginx -t
systemctl reload nginx 

; https://www.cyberciti.biz/faq/linux-restart-network-interface/
ip link show 
ifconfig -a

ifdown ens33
ifup ens33 

ip a show ens33 

; Debian 
sudo /etc/init.d/networking restart
sudo /etc/init.d/networking stop
sudo /etc/init.d/networking start
sudo systemctl restart networking
sudo systemctl restart NetworkManager

ip a 
ip a show 
ip a show ens33

;;;
sudo systemctl restart networking
sudo systemctl restart NetworkManager

; https://www.inmotionhosting.com/support/server/server-usage/nginx-basics/

server {
	listen 80;
	listen [::]:80 ipv6only=on;
#	server_name www.yourdomain.ext yourdomain.ext;
#	return 301 https://$host$request_uri;
}
server {
	listen 443 ssl http2;
	listen [::]:443 ipv6only=on ssl http2;
	keepalive_timeout 70;

#        server_name www.yourdomain.ext yourdomain.ext;
#        ssl_certificate /etc/letsencrypt/live/yourdomain.ext/fullchain.pem;
#        ssl_certificate_key /etc/letsencrypt/live/yourdomain.ext/privkey.pem;
#        root /var/www/sitedir/;

	index index.php index.html;
	http2_push_preload on;

	add_header Strict-Transport-Security "max-age=15768000; includeSubDomains;";
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-Content-Type-Options nosniff;

	location = /favicon.ico { log_not_found off; access_log off; }
	location = /robots.txt { allow all; log_not_found off; access_log off; }
	location ~ /\. { deny all; }
	location ~* /(?:uploads|files)/.*\.php$ { deny all; }
	location / { try_files $uri $uri/ /index.php?q=$uri&$args; }
	location ~*  \.(ico|pdf|flv|jpg|jpeg|png|gif|js|css|swf|svg|ttf|woff2)$ { expires 365d; log_not_found off; }
	location ~ ^/\.user\.ini { deny all; }
	location ~ /\.ht { deny all; }

	error_page 404 /404.html;
	error_page 500 502 503 504 /50x.html;
	location = /50x.html { root /usr/share/nginx/html; }

	location ~ \.php$ {
		fastcgi_pass unix:/run/php/php&&&-fpm.sock;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		fastcgi_buffers 16 16k;
		fastcgi_buffer_size 32k;
		include fastcgi_params;
		include snippets/fastcgi-php.conf;
	}
}